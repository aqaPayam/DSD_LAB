|UART
data_in[0] => data_in[0]~6.IN1
data_in[1] => data_in[1]~5.IN1
data_in[2] => data_in[2]~4.IN1
data_in[3] => data_in[3]~3.IN1
data_in[4] => data_in[4]~2.IN1
data_in[5] => data_in[5]~1.IN1
data_in[6] => data_in[6]~0.IN1
transmit_en => transmit_en~0.IN1
rst => rst~0.IN1
clk => clk~0.IN1
rx_in_bit => rx_in_bit~0.IN1
data_out[0] <= RX:rx.data
data_out[1] <= RX:rx.data
data_out[2] <= RX:rx.data
data_out[3] <= RX:rx.data
data_out[4] <= RX:rx.data
data_out[5] <= RX:rx.data
data_out[6] <= RX:rx.data
is_transmitted <= TX:tx.sent
is_received <= RX:rx.received
parity <= RX:rx.parity
tx_out_bit <= TX:tx.s_out


|UART|pulseM:p
rst => pulse~1.OUTPUTSELECT
rst => counter~63.OUTPUTSELECT
rst => counter~62.OUTPUTSELECT
rst => counter~61.OUTPUTSELECT
rst => counter~60.OUTPUTSELECT
rst => counter~59.OUTPUTSELECT
rst => counter~58.OUTPUTSELECT
rst => counter~57.OUTPUTSELECT
rst => counter~56.OUTPUTSELECT
rst => counter~55.OUTPUTSELECT
rst => counter~54.OUTPUTSELECT
rst => counter~53.OUTPUTSELECT
rst => counter~52.OUTPUTSELECT
rst => counter~51.OUTPUTSELECT
rst => counter~50.OUTPUTSELECT
rst => counter~49.OUTPUTSELECT
rst => counter~48.OUTPUTSELECT
rst => counter~47.OUTPUTSELECT
rst => counter~46.OUTPUTSELECT
rst => counter~45.OUTPUTSELECT
rst => counter~44.OUTPUTSELECT
rst => counter~43.OUTPUTSELECT
rst => counter~42.OUTPUTSELECT
rst => counter~41.OUTPUTSELECT
rst => counter~40.OUTPUTSELECT
rst => counter~39.OUTPUTSELECT
rst => counter~38.OUTPUTSELECT
rst => counter~37.OUTPUTSELECT
rst => counter~36.OUTPUTSELECT
rst => counter~35.OUTPUTSELECT
rst => counter~34.OUTPUTSELECT
rst => counter~33.OUTPUTSELECT
rst => counter~32.OUTPUTSELECT
clk => counter[31].CLK
clk => counter[30].CLK
clk => counter[29].CLK
clk => counter[28].CLK
clk => counter[27].CLK
clk => counter[26].CLK
clk => counter[25].CLK
clk => counter[24].CLK
clk => counter[23].CLK
clk => counter[22].CLK
clk => counter[21].CLK
clk => counter[20].CLK
clk => counter[19].CLK
clk => counter[18].CLK
clk => counter[17].CLK
clk => counter[16].CLK
clk => counter[15].CLK
clk => counter[14].CLK
clk => counter[13].CLK
clk => counter[12].CLK
clk => counter[11].CLK
clk => counter[10].CLK
clk => counter[9].CLK
clk => counter[8].CLK
clk => counter[7].CLK
clk => counter[6].CLK
clk => counter[5].CLK
clk => counter[4].CLK
clk => counter[3].CLK
clk => counter[2].CLK
clk => counter[1].CLK
clk => counter[0].CLK
clk => pulse~reg0.CLK
pulse <= pulse~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART|TX:tx
rstN => data_index[2].ACLR
rstN => data_index[1].ACLR
rstN => data_index[0].ACLR
rstN => sent~reg0.ACLR
rstN => s_out~reg0.PRESET
rstN => data[0].ENA
rstN => data[6].ENA
rstN => data[5].ENA
rstN => data[4].ENA
rstN => data[3].ENA
rstN => data[2].ENA
rstN => data[1].ENA
clk => data_index[2].CLK
clk => data_index[1].CLK
clk => data_index[0].CLK
clk => sent~reg0.CLK
clk => s_out~reg0.CLK
clk => data[6].CLK
clk => data[5].CLK
clk => data[4].CLK
clk => data[3].CLK
clk => data[2].CLK
clk => data[1].CLK
clk => data[0].CLK
start => state~4.OUTPUTSELECT
start => state~3.OUTPUTSELECT
start => state~2.OUTPUTSELECT
start => state~1.OUTPUTSELECT
start => state~0.OUTPUTSELECT
start => state~9.OUTPUTSELECT
start => state~8.OUTPUTSELECT
start => state~7.OUTPUTSELECT
start => state~6.OUTPUTSELECT
start => state~5.OUTPUTSELECT
start => s_out~0.OUTPUTSELECT
start => data~6.OUTPUTSELECT
start => data~5.OUTPUTSELECT
start => data~4.OUTPUTSELECT
start => data~3.OUTPUTSELECT
start => data~2.OUTPUTSELECT
start => data~1.OUTPUTSELECT
start => data~0.OUTPUTSELECT
start => data_index~2.OUTPUTSELECT
start => data_index~1.OUTPUTSELECT
start => data_index~0.OUTPUTSELECT
start => sent~0.OUTPUTSELECT
data_in[0] => data~6.DATAB
data_in[1] => data~5.DATAB
data_in[2] => data~4.DATAB
data_in[3] => data~3.DATAB
data_in[4] => data~2.DATAB
data_in[5] => data~1.DATAB
data_in[6] => data~0.DATAB
s_out <= s_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
sent <= sent~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART|RX:rx
rstN => last_s_in.PRESET
rstN => data_index[2].ACLR
rstN => data_index[1].ACLR
rstN => data_index[0].ACLR
rstN => received~reg0.ACLR
rstN => data[6]~reg0.ACLR
rstN => data[5]~reg0.ACLR
rstN => data[4]~reg0.ACLR
rstN => data[3]~reg0.ACLR
rstN => data[2]~reg0.ACLR
rstN => data[1]~reg0.ACLR
rstN => data[0]~reg0.ACLR
rstN => parity~reg0.ACLR
clk => last_s_in.CLK
clk => data_index[2].CLK
clk => data_index[1].CLK
clk => data_index[0].CLK
clk => received~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[0]~reg0.CLK
clk => parity~reg0.CLK
s_in => data~13.DATAB
s_in => data~12.DATAB
s_in => data~11.DATAB
s_in => data~10.DATAB
s_in => data~9.DATAB
s_in => data~8.DATAB
s_in => data~7.DATAB
s_in => always0~0.IN1
s_in => parity~reg0.DATAIN
s_in => last_s_in.DATAIN
received <= received~reg0.DB_MAX_OUTPUT_PORT_TYPE
parity <= parity~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE


